image: jangrewe/gitlab-ci-android

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .gradle/

before_script:
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - chmod +x ./gradlew

stages:
  - test
  - assembleDebugApk
  - deployDebugApk
  - assembleReleaseApk
  - deployRepleaseApk
  - assembleReleaseBundle
  - deployBundle

testDebug:
  stage: test
  only:
    - ninja-master
  script:
    - ./gradlew -Pci --console=plain testConversationsFreeDebugUnitTest

testRelease:
  stage: test
  only:
    - tags
  script:
    - ./gradlew -Pci --console=plain testConversationsFreeReleaseUnitTest

assembleDebug:
  stage: assembleDebugApk
  only:
    - ninja-master
  script:
    - ./gradlew assembleConversationsFreeDebug
  artifacts:
    paths:
      - build/outputs/apk/conversationsFree/debug

deployDebug:
  stage: deployDebugApk
  only:
    - ninja-master
  script:
    - |
      curl \
        -F token="${APK_SLACK_CHANNEL_ACCESS_TOKEN}" \
        -F channels="${APK_SLACK_CHANNEL_ID}" \
        -F initial_comment="Hello Team! Here is the latest Ninja Chat debug APK" \
        -F "file=@$(find build/outputs/apk/conversationsFree/debug -name '*arm64*')" \
        https://slack.com/api/files.upload
  cache: {}

assembleReleaseApk:
  stage: assembleReleaseApk
  only:
    - tags
  script:
    - echo $KEYSTORE_FILE | base64 -d > my.keystore
    - echo $KEYSTORE_FILE
    - cat my.keystore
    - ./gradlew assembleConversationsFreeRelease
      -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
      -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
      -Pandroid.injected.signing.key.alias=$KEY_ALIAS
      -Pandroid.injected.signing.key.password=$KEY_PASSWORD
  artifacts:
    paths:
      - build/outputs/apk/conversationsFree/release
      - CHANGELOG

deployReleaseApk:
  stage: deployRepleaseApk
  only:
    - tags
  script:
    - |
      curl \
        -F token="${APK_SLACK_CHANNEL_ACCESS_TOKEN}" \
        -F channels="${APK_SLACK_CHANNEL_ID}" \
        -F initial_comment="Hello Team! Here is the latest Ninja Chat release APK" \
        -F "file=@$(find build/outputs/apk/conversationsFree/release -name '*arm64*')" \
        https://slack.com/api/files.upload
  cache: {}

assembleReleaseBundle:
  stage: assembleReleaseBundle
  only:
    - tags
  script:
    - echo $KEYSTORE_FILE | base64 -d > my.keystore
    - ./gradlew bundleConversationsFreeSystemRelease
      -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
      -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
      -Pandroid.injected.signing.key.alias=$KEY_ALIAS
      -Pandroid.injected.signing.key.password=$KEY_PASSWORD
  artifacts:
    paths:
      - build/outputs/bundle/conversationsFreeRelease
      - CHANGELOG

deployReleaseBundle:
  stage: deployBundle
  only:
    - tags
  script:
    - |
      curl \
        -F token="${APK_SLACK_CHANNEL_ACCESS_TOKEN}" \
        -F channels="${APK_SLACK_CHANNEL_ID}" \
        -F initial_comment="Hello Team! Here is the latest Ninja Chat release Bundle" \
        -F "file=@$(find build/outputs/bundle/conversationsFreeRelease -name 'ninja-chat*')" \
        https://slack.com/api/files.upload
  cache: {}