image: jangrewe/gitlab-ci-android

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .gradle/

before_script:
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - chmod +x ./gradlew

stages:
  - build
  - test
  - release
  - deploy

# While linting is good, I don't want to make a ton of changes to the code because it makes it harder to pull in changes from the upstream repo
#lintDebug:
#  stage: build
#  only:
#    - ninja-master
#  script:
#    - ./gradlew -Pci --console=plain lintConversationsFreeSystemDebug -PbuildDir=lint

#assembleDebug:
#  stage: build
#  only:
#    - ninja-master
#  script:
#    - ./gradlew assembleConversationsFreeSystemDebug
#  artifacts:
#    paths:
#      - build/outputs/apk/conversationsFreeSystem/debug
#
#testDebug:
#  stage: test
#  only:
#    - ninja-master
#  script:
#    - ./gradlew -Pci --console=plain testConversationsFreeSystemDebugUnitTest
#
#deployDebug:
#  stage: deploy
#  only:
#    - ninja-master
#  script:
#    - |
#      curl \
#        -F token="${APK_SLACK_CHANNEL_ACCESS_TOKEN}" \
#        -F channels="${APK_SLACK_CHANNEL_ID}" \
#        -F initial_comment="Hello Team! Here is the latest Ninja Chat debug APK" \
#        -F "file=@$(find build/outputs/apk/conversationsFreeSystem/debug -name '*arm64*')" \
#        https://slack.com/api/files.upload
#  cache: {}

#lintRelease:
#  stage: build
#  only:
#    - tags
#  script:
#    - ./gradlew -Pci --console=plain lintConversationsFreeSystemRelease -PbuildDir=lint

assembleReleaseApk:
  stage: build
  only:
    - ninja-master
  script:
    - echo $KEYSTORE_FILE
    - echo ${KEYSTORE_FILE}
    - echo '${KEYSTORE_FILE}'
    - echo "${KEYSTORE_FILE}"
    - echo ${KEYSTORE_FILE} | base64 -d > my.keystore
    - cat my.keystore
    - ./gradlew assembleConversationsFreeSystemRelease
      -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
      -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
      -Pandroid.injected.signing.key.alias=$KEY_ALIAS
      -Pandroid.injected.signing.key.password=$KEY_PASSWORD
  artifacts:
    paths:
      - build/outputs/apk/conversationsFreeSystem/release
      - CHANGELOG

testRelease:
  stage: test
  only:
    - tags
  script:
    - ./gradlew -Pci --console=plain testConversationsFreeSystemReleaseUnitTest

deployReleaseApk:
  stage: deploy
  only:
    - tags
  script:
    - |
      curl \
        -F token="${APK_SLACK_CHANNEL_ACCESS_TOKEN}" \
        -F channels="${APK_SLACK_CHANNEL_ID}" \
        -F initial_comment="Hello Team! Here is the latest Ninja Chat release APK" \
        -F "file=@$(find build/outputs/apk/conversationsFreeSystem/release -name '*arm64*')" \
        https://slack.com/api/files.upload
  cache: {}

assembleReleaseBundle:
  stage: release
  only:
    - tags
  script:
    - echo $KEYSTORE_FILE | base64 -d > my.keystore
    - ./gradlew bundleConversationsFreeSystemRelease
      -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
      -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
      -Pandroid.injected.signing.key.alias=$KEY_ALIAS
      -Pandroid.injected.signing.key.password=$KEY_PASSWORD
  artifacts:
    paths:
      - build/outputs/bundle/conversationsFreeSystemRelease
      - CHANGELOG

deployReleaseBundle:
  stage: deploy
  only:
    - tags
  script:
    - |
      curl \
        -F token="${APK_SLACK_CHANNEL_ACCESS_TOKEN}" \
        -F channels="${APK_SLACK_CHANNEL_ID}" \
        -F initial_comment="Hello Team! Here is the latest Ninja Chat release Bundle" \
        -F "file=@$(find build/outputs/bundle/conversationsFreeSystemRelease -name 'ninja-chat*')" \
        https://slack.com/api/files.upload
  cache: {}